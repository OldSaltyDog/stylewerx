#bg {
	.split(@clr1; @clr2; @sp: 50%; @angle: 0deg) {
		@cstop: #cs.hp-1(@clr1, @clr2, @sp)[];
		@bg: #gf.linear(@cs: @cstop; @angle)[];
		#bg.add(@bg);
	}
	.split() {
		.x(@clr1; @clr2) {
			@cs: #cs.hp-1(@clr1, @clr2)[];
			#bg.add(#gf.linear(@cs; @from[t])[]);
		}

		.x(@clr1; @clr2; @size; @pos) {
			@cs: #cs.hp-1(@clr1, @clr2)[];
			#bg.add(#gf.linear(@cs; @from[t])[]; @pos; @size);
		}

		.y(@clr1; @clr2) {
			@cs: #cs.hp-1(@clr1, @clr2)[];
			#bg.add(#gf.linear(@cs; @from[l])[]);
		}

		.y(@clr1; @clr2; @size; @pos) {
			@cs: #cs.hp-1(@clr1, @clr2)[];
			#bg.add(#gf.linear(@cs; @from[l])[]; @pos; @size);
		}

		.d-bl(@clr1; @clr2) {
			@cs: #cs.hp-1(@clr1, @clr2)[];
			#bg.add(#gf.linear(@cs; @from[bl])[]);
		}

		.d-bl(@clr1; @clr2; @size; @pos) {
			@cs: #cs.hp-1(@clr1, @clr2)[];
			#bg.add(#gf.linear(@cs; @from[bl])[]; @pos; @size);
		}

		.d-tl(@clr1; @clr2) {
			@cs: #cs.hp-1(@clr1, @clr2)[];
			#bg.add(#gf.linear(@cs; @from[tl])[]);
		}

		.d-tl(@clr1; @clr2; @size; @pos) {
			@cs: #cs.hp-1(@clr1, @clr2)[];
			#bg.add(#gf.linear(@cs; @from[tl])[]; @pos; @size);
		}

		.d-tr(@clr1; @clr2) {
			@cs: #cs.hp-1(@clr1, @clr2)[];
			#bg.add(#gf.linear(@cs; @from[tr])[]);
		}

		.d-tr(@clr1; @clr2; @size; @pos) {
			@cs: #cs.hp-1(@clr1, @clr2)[];
			#bg.add(#gf.linear(@cs;  @from[tr])[]; @pos; @size);
		}

		.d-br(@clr1; @clr2) {
			@cs: #cs.hp-1(@clr1, @clr2)[];
			#bg.add(#gf.linear(@cs; @from[br])[]);
		}

		.d-br(@clr1; @clr2; @size; @pos) {
			@cs: #cs.hp-1(@clr1, @clr2)[];
			#bg.add(#gf.linear(@cs;  @from[br])[]; @pos; @size);
		}
	}
}
